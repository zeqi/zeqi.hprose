/**
* Persistence model for {{&modelName}}
* {{&schema_desc}}
* @module {{&moduleName}}
* @auto-gen
* Note: auto-gen code, NOT allowed to modify
*/

let mongoose = require('mongoose');
let common = require('zeqi.common');
let DS = common.DS;
let DS_NAME = '{{&dsName}}';
let BASE_COLLECTION_NAME = '{{&collectionName}}';
const ALREADY_SCHEMA = {};

let getSchema = function (domain) {
    if (ALREADY_SCHEMA[domain]) {
        return ALREADY_SCHEMA[domain];
    }
    var Schema = new mongoose.Schema({

        {{#schema}}
            /**
            * Property definition - {{&name}}
            * {{&description}}
            */
            {{&name}}:{{&type}}{{#comma}},{{/comma}}

        {{/schema}}
    }
    {{#collectionName}}
        , { collection: domain + '.' + BASE_COLLECTION_NAME}
    {{/collectionName}}
    );

    //================================
    //       Index part 
    //================================
    {{#index}}
        Schema.index({{&fields}}, {{&options}});
    {{/index}}

    {{#schema_statics}}
    /**
    * {{&description}}
    * @param cb <function>  call back
    * @returns {*|Query}
    */
    Schema.statics.{{&name}} = function( {{#conditionParams}}{{#isparam}}{{&name}},{{/isparam}}{{/conditionParams}}cb) {
        return this.find({ {{#conditionParams}}{{#schenaValse}}{{&name}}:new RegExp({{&name}}, 'i'){{/schenaValse}} {{#defaultValue}}{{&name}}:'{{&defaultValue}}'{{/defaultValue}}{{#comma}},{{/comma}}{{/conditionParams}} }, cb);
    }
    {{/schema_statics}}

    {{#schena_methods}}
    /**
    * {{&description}}
    * @param cb <function>  call back
    * @returns {*|Query}
    */
    Schema.methods.{{&name}} = function (cb) {
        return this.model(domain + '.' + BASE_COLLECTION_NAME).find({ {{#conditionParams}}{{#defaultValue}} {{&name}}:'{{&defaultValue}}' {{/defaultValue}} {{#schenaValse}} {{&name}}:this.{{&name}} {{/schenaValse}}{{#comma}},{{/comma}}{{/conditionParams}} }, cb);
    }
    {{/schena_methods}}

    ALREADY_SCHEMA[domain] = Schema;
    return Schema;
}

module.exports.schema = getSchema;
module.exports.model = function (domain) {
    let db = DS.getConnection(DS_NAME);
    return db.model(domain + '.' + BASE_COLLECTION_NAME, getSchema(domain));
};